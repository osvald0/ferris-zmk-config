#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define SYM_L 1
#define NUM_MOVE_L 2
#define TMUX_NVIM_L 3
#define NAV_L 4
#define SYSTEM_L 5


&lt {
    flavor = "balanced";
    tapping-term-ms = <175>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <0>;
};

/ {
    behaviors {
        hm: hold_tap {
          compatible = "zmk,behavior-hold-tap";
          #binding-cells = <2>;
          flavor = "balanced";
          tapping-term-ms = <175>;
          quick-tap-ms = <175>;
          require-prior-idle-ms = <0>;
          bindings = <&kp>, <&kp>;
        };
    };


    macros {
        ss_window: ss_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_4)) &kp SPACE>;
            label = "SS_WINDOW";
        };

        tmux_t_0: tmux_t_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp NUMBER_0>;
            label = "TMUX_T_0";
        };

        tmux_t_1: tmux_t_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp NUMBER_1>;
            label = "TMUX_T_1";
        };

        tmux_t_2: tmux_t_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp NUMBER_2>;
            label = "TMUX_T_2";
        };

        tmux_t_3: tmux_t_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp NUMBER_3>;
            label = "TMUX_T_3";
        };

        tmux_t_4: tmux_t_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp NUMBER_4>;
            label = "TMUX_T_4";
        };

        tmux_t_5: tmux_t_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp NUMBER_5>;
            label = "TMUX_T_5";
        };

        tmux_t_6: tmux_t_6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp NUMBER_6>;
            label = "TMUX_T_6";
        };

        tmux_t_prev: tmux_t_prev {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp P>;
            label = "TMUX_T_PREV";
        };

        tmux_t_next: tmux_t_next {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp N>;
            label = "TMUX_T_NEXT";
        };

        tmux_t_new: tmux_t_new {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp C>;
            label = "TMUX_T_NEW";
        };

        tmux_s_switch: tmux_s_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp S>;
            label = "TMUX_S_SWITCH";
        };

        tmux_t_delete: tmux_t_delete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp AMPERSAND>;
            label = "TMUX_T_DELETE";
        };

        nvim_search_grep: nvim_search_grep {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp S &kp LS(G)>;
            label = "NVIM_SEARCH_GREP";
        };

        nvim_search_todo: nvim_search_todo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp S &kp LS(T)>;
            label = "NVIM_SEARCH_TODO";
        };

        nvim_select_around: nvim_select_around {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp V &kp I &kp W &kp G &kp S &kp A>;
            label = "NVIM_SELECT_AROUND";
        };
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <3 2>;
        };

        start {
            bindings = <&kp NUMBER_0>;
            key-positions = <3 4>;
        };

        end {
            bindings = <&kp LG(DOLLAR)>;
            key-positions = <5 6>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <6 7>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp Q       &kp W       &lt 4 E      &lt 3 R              &lt 4 T           &lt 4 Y        &lt 3 U      &lt 4 I      &kp O       &kp P
            &hm LALT A  &hm LGUI S  &hm LCTRL D  &hm LSHFT F          &lt 3 G           &lt 3 H        &hm RSHFT J  &hm RCTRL K  &hm LGUI L  &hm LGUI SEMICOLON
            &kp Z       &kp X       &kp C        &kp V                &lt 5 B           &lt 5 N        &kp M        &kp COMMA    &kp PERIOD  &kp SLASH
                                                &lt 1 BACKSPACE  &lt 2 ESCAPE    &lt 2 ENTER  &lt 1 SPACE
            >;
        };

        sym_layer {
            bindings = <
            &trans         &kp TILDE       &kp PLUS          &kp LEFT_BRACE        &kp GRAVE          &kp AMPERSAND  &kp RIGHT_BRACE        &kp EQUAL          &kp PERCENT  &trans
            &kp BACKSLASH  &kp UNDERSCORE  &kp SINGLE_QUOTE  &kp LEFT_PARENTHESIS  &kp EXCLAMATION    &kp ASTERISK   &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp MINUS    &kp PIPE
            &trans         &trans          &kp CARET         &kp LEFT_BRACKET      &kp DOLLAR         &kp AT_SIGN    &kp RIGHT_BRACKET      &kp HASH           &trans       &trans
                                                            &trans                &trans             &trans         &trans
            >;
        };

        num_move_layer {
            bindings = <
            &kp PRINTSCREEN       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
            &kp LS(LG(NUMBER_4))  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
            &ss_window            &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans          &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                                                              &trans        &trans          &mkp LCLK       &mkp RCLK
            >;
        };

        tmux_nvim_layer {
            bindings = <
            &trans  &tmux_t_1       &tmux_t_2       &tmux_t_3    &tmux_t_prev    &trans               &trans             &trans             &trans  &trans
            &trans  &tmux_t_4       &tmux_t_5       &tmux_t_6    &tmux_t_0       &nvim_select_around  &nvim_search_grep  &nvim_search_todo  &trans  &trans
            &trans  &tmux_t_delete  &tmux_s_switch  &tmux_t_new  &tmux_t_next    &trans               &trans             &trans             &trans  &trans
                                                    &trans       &trans          &trans               &trans
            >;
        };

        nav_layer {
            bindings = <
            &trans  &trans  &trans  &kp LS(C_AC_ZOOM_IN)   &kp C_VOLUME_UP    &kp LA(LC(LEFT))  &kp LA(LC(DOWN_ARROW))  &kp LA(LC(UP_ARROW))  &kp LA(LC(RIGHT))  &trans
            &trans  &trans  &trans  &kp LS(C_AC_ZOOM_OUT)  &kp C_VOL_DN       &kp LC(LA(D))     &kp LA(LC(E))           &kp LA(LC(T))         &kp LA(LC(G))      &trans
            &trans  &trans  &trans  &kp LS(C_AC_ZOOM)      &kp K_MUTE         &trans            &kp LA(LC(ENTER))       &kp LC(LA(C))         &trans             &trans
                                    &trans                 &trans             &trans            &trans
            >;
        };

        system_layer {
            bindings = <
            &sys_reset  &trans     &trans    &trans    &bt BT_SEL 0    &trans     &trans     &trans     &trans    &sys_reset
            &bootloader &trans     &trans    &trans    &bt BT_SEL 1    &trans     &trans     &trans     &trans    &bootloader
            &trans      &trans     &trans    &bt BT_CLR &bt BT_SEL 2    &trans     &trans     &trans     &trans     &trans
                                             &trans     &trans         &trans     &trans
            >;
        };
    };
};
